version: '3.8'

services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - '8000:80'
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - npm 
      - php
      - mysql
      - pgsql
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
  mysql:
    image: mysql:5.7
    #platform: linux/amd64
    env_file:
      - ./env/mysql.env
    volumes:
      - mysql-datavolume:/var/lib/mysql
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
  npm:
    build: 
      context: ./dockerfiles
      dockerfile: npm.dockerfile
    ports:
      - '5173:5173'
    working_dir: /var/www/html
    entrypoint: ['npm','run','dev']
    volumes:
      - ./src:/var/www/html
  pgsql:
    image: postgres:latest
    environment:
      POSTGRES_DB: homestead
      POSTGRES_USER: homestead
      POSTGRES_PASSWORD: secret
    ports:
    - '5433:5432'
    volumes:
      - pgsql-datavolume:/var/lib/postgresql/data 
volumes:
  mysql-datavolume:
  pgsql-datavolume:
  
